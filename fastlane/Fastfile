default_platform(:ios)

platform :android do
  desc "Build Android App Bundle"
  lane :build_aab do
    gradle(
      task: "bundle",
      build_type: "Release",
      properties: {
        "keystorePassword" => ENV['KEYSTORE_PASSWORD'],
        "keyAlias" => ENV['KEYSTORE_ALIAS']
      }
    )
  end

  desc "Deploy to Google Play"
  lane :deploy do
    upload_to_play_store(
      track: 'internal',
      aab: 'android/app/build/outputs/bundle/release/app-release.aab'
    )
  end
end

platform :ios do
  desc "Ensure the correct Xcode version"
  lane :set_xcode_version do
    sh("bundle exec xcodes install 16.2")  # Use the xcodes gem to specify the Xcode version
    sh("bundle exec xcodes select 16.2")
  end

  desc "Build the iOS app"
  lane :build do
    set_xcode_version

    build_app(
      workspace: "ios/TMS.xcworkspace",
      scheme: "TMS",
      configuration: "Release",
      sdk: "iphoneos",
      export_method: "app-store",
      archive_path: "$CIRCLE_WORKING_DIRECTORY/build/TMS.xcarchive",
      export_options: {
        provisioningProfiles: {
          "org.reactjs.native.example.TMS" => "match AppStore org.reactjs.native.example.TMS"
        }
      },
      build_path: "$CIRCLE_WORKING_DIRECTORY/build",
      output_directory: "$CIRCLE_WORKING_DIRECTORY/build",
      output_name: "TMS.ipa",
      clean: true,
      include_bitcode: false,
      export_xcargs: "-allowProvisioningUpdates",
      export_team_id: ENV['DEVELOPMENT_TEAM'] # Add your Team ID here
    )
  end

  desc "Deploy the iOS app to Apple App Store"
  lane :deploy do
    upload_to_app_store(
      username: ENV['APP_STORE_CONNECT_USERNAME'],
      app_identifier: ENV['APP_IDENTIFIER']
    )
  end
end