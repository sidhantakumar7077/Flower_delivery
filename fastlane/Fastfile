default_platform(:ios)

platform :android do
  desc "Build Android App Bundle (AAB)"
  lane :build_aab do
    gradle(
      task: "bundle",
      build_type: "Release",
      properties: {
        "keystorePassword" => ENV['KEYSTORE_PASSWORD'],
        "keyAlias" => ENV['KEYSTORE_ALIAS']
      }
    )
  end

  desc "Deploy Android AAB to Google Play"
  lane :deploy do
    upload_to_play_store(
      track: 'internal', # Options: internal, alpha, beta, production
      aab: 'android/app/build/outputs/bundle/release/app-release.aab'
    )
  end
end

platform :ios do
  desc "Ensure the correct Xcode version is installed and selected"
  lane :set_xcode_version do
    xcode_version = "16.2" # Specify the required Xcode version
    sh("bundle exec xcodes install #{xcode_version}")  # Installs Xcode if not already installed
    sh("bundle exec xcodes select #{xcode_version}")  # Sets the specified Xcode version
  end

  desc "Build the iOS app"
  lane :build do
    # Ensure the correct Xcode version
    set_xcode_version

    build_app(
      workspace: "ios/TMS.xcworkspace",     # Path to your .xcworkspace file
      scheme: "TMS",                        # Your app's scheme
      configuration: "Release",             # Build configuration
      sdk: "iphoneos",                      # Specify SDK
      export_method: "app-store",           # Export method: app-store, ad-hoc, etc.
      archive_path: "./build/TMS.xcarchive", # Path for archive
      export_options: {
        provisioningProfiles: {
          ENV['APP_IDENTIFIER'] => ENV['MATCH_PROVISIONING_PROFILE']
        }
      },
      build_path: "./build",                 # Build output path
      output_directory: "./build",           # IPA output path
      output_name: "TMS.ipa",                # Output IPA name
      clean: true,                           # Clean build
      include_bitcode: false,                # Include bitcode in build (optional)
      export_xcargs: "-allowProvisioningUpdates", # Allow automatic provisioning updates
      export_team_id: ENV['DEVELOPMENT_TEAM']    # Specify your development team ID
    )
  end

  desc "Deploy the iOS app to the Apple App Store"
  lane :deploy do
    upload_to_app_store(
      username: ENV['APP_STORE_CONNECT_USERNAME'], # Your Apple Developer account email
      app_identifier: ENV['APP_IDENTIFIER']        # Your app bundle identifier
    )
  end
end
